{"version":3,"sources":["webpack:///./src/components/homepage_issue/index.jsx","webpack:///./src/pages/index.jsx"],"names":["HomepageIssue","props","_this","_React$Component","call","this","download","React","createRef","share","homepage","latestIssue","issues","currentIssue","render","react_default","a","createElement","className","href","withPrefix","path","target","src","image_href","alt","title","bg_href","Component","IndexPage","_ref","data","allDataJson","edges","node","sort","b","number","Helmet_default","components_homepage_issue","key","pageQuery"],"mappings":"iKA8BeA,sBAxBb,SAAAA,EAAYC,GAAO,IAAAC,GACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,SAAWC,IAAMC,YACtBN,EAAKO,MAAQF,IAAMC,YACnBN,EAAKQ,UAAW,EAChB,IAAMC,EAAcV,EAAMW,QAAUX,EAAMW,OAAO,GANhC,OAOjBV,EAAKW,aAAeF,EAPHT,4GAUnBY,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,4BACjBH,EAAAC,EAAAC,cAAA,KAAGE,KAAMC,YAAWf,KAAKQ,aAAaQ,MAAOC,OAAO,UAClDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBK,IAAKH,YAAWf,KAAKQ,aAAaW,YAAaC,IAAKpB,KAAKQ,aAAaa,SAE5GX,EAAAC,EAAAC,cAAA,KAAGE,KAAMC,YAAWf,KAAKQ,aAAaQ,MAAOC,OAAO,UAClDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeK,IAAKH,YAAWf,KAAKQ,aAAac,SAAUF,IAAKpB,KAAKQ,aAAaa,cAlB/EnB,IAAMqB,mDCanBC,UAXG,SAAAC,GAAc,IACxBlB,EADwBkB,EAAXC,KACCC,YAAYC,MAAM,GAAGC,KAAKtB,OAAOuB,KAAK,SAACnB,EAAGoB,GAAJ,OAAUA,EAAEC,OAASrB,EAAEqB,SAEjF,OACEtB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAQU,MAPK,kBAQbX,EAAAC,EAAAC,cAACsB,EAAD,CAAe7B,UAAQ,EAACE,OAAQA,EAAQ4B,IAAI,qBARlD,IAeaC,EAAS","file":"component---src-pages-index-jsx-fe3cf42c82bc2a5b934a.js","sourcesContent":["import React from 'react';\nimport { withPrefix } from 'gatsby';\n\nimport './homepage_issue.scss';\n\nclass HomepageIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    // create a ref to store the textInput DOM element\n    this.download = React.createRef();\n    this.share = React.createRef();\n    this.homepage = true;\n    const latestIssue = props.issues && props.issues[0];\n    this.currentIssue = latestIssue;\n  }\n\n  render() {\n    return (\n      <article className=\"vh-site issue--container\">\n        <a href={withPrefix(this.currentIssue.path)} target=\"_blank\">\n          <img className=\"issue--full-height\" src={withPrefix(this.currentIssue.image_href)} alt={this.currentIssue.title} />\n        </a>\n        <a href={withPrefix(this.currentIssue.path)} target=\"_blank\">\n          <img className=\"issue--cover\" src={withPrefix(this.currentIssue.bg_href)} alt={this.currentIssue.title} />\n        </a>\n      </article>\n    );\n  }\n}\n\nexport default HomepageIssue;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport HomepageIssue from '../components/homepage_issue';\n\nconst PAGE_TITLE = 'Figure Figure';\n\nconst IndexPage = ({ data }) => {\n  const issues = data.allDataJson.edges[0].node.issues.sort((a, b) => b.number - a.number);\n\n  return (\n    <main>\n      <Helmet title={PAGE_TITLE} />\n      <HomepageIssue homepage issues={issues} key=\"homepage issue\" />\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allDataJson {\n      edges {\n        node {\n          issues {\n            number\n            title\n            date_of_issue\n            path\n            bg_href\n            image_href\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}