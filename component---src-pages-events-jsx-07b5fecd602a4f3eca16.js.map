{"version":3,"sources":["webpack:///./src/pages/events.jsx","webpack:///./src/components/utils.js"],"names":["EventsPage","props","_this","_React$Component","call","this","data","allDataJson","edges","node","events","forEach","event","date","Date","ref","React","createRef","sort","a","b","currentEvent","length","undefined","getImage","img","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","className","src","withPrefix","alt","title","pdf","href","target","getItem","i","key","onMouseEnter","showEvent","bind","showDayDate","toUpperCase","subtitle","scroll","current","scrollIntoView","behavior","render","_this2","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","imgList","map","Component","pageQuery","__webpack_require__","d","__webpack_exports__","showMonthDate","monthNames","getUTCMonth","getFullYear","getDate"],"mappings":"8MAMA,IAEMA,sBACJ,SAAAA,EAAYC,GAAO,IAAAC,EACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,KACA,IAAMC,EAAOL,EAAMK,KAAKC,YAAYC,MAAM,GAAGC,KAF5B,OAGjBH,EAAKI,OAAOC,QAAQ,SAACC,GACnBA,EAAMC,KAAO,IAAIC,KAAKF,EAAMC,MAC5BD,EAAMG,IAAMC,IAAMC,cAEpBf,EAAKQ,OAASJ,EAAKI,OAAOQ,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEP,KAAOM,EAAEN,OACpDX,EAAKmB,aAAenB,EAAKQ,OAAOY,OAASpB,EAAKQ,OAAOR,EAAKQ,OAAOY,OAAS,QAAKC,EAR9DrB,oHAWnBsB,SAAA,SAASZ,GACP,IAAMa,EAAMC,EAAAP,EAAAQ,cAAA,OAAKC,UAAU,YAAYC,IAAKC,YAAWlB,EAAMa,KAAMM,IAAKnB,EAAMoB,QAC9E,OAAOpB,EAAMqB,IAAMP,EAAAP,EAAAQ,cAAA,KAAGO,KAAMJ,YAAWlB,EAAMqB,KAAME,OAAO,UAAUV,GAAWA,KAGjFW,QAAA,SAAQxB,EAAOyB,GACb,OACEX,EAAAP,EAAAQ,cAAA,MAAIW,IAAG,cAAgBD,EAAKE,aAAclC,KAAKmC,UAAUC,KAAKpC,KAAMO,IAClEc,EAAAP,EAAAQ,cAAA,QAAMC,UAAU,eACdF,EAAAP,EAAAQ,cAAA,QAAMC,UAAU,cAAcc,YAAY9B,EAAMC,OAChDa,EAAAP,EAAAQ,cAAA,QAAMC,UAAU,eACbhB,EAAMoB,MAAMW,cACbjB,EAAAP,EAAAQ,cAAA,WACCf,EAAMgC,SACPlB,EAAAP,EAAAQ,cAAA,WACCf,EAAMqB,IAAMP,EAAAP,EAAAQ,cAAA,KAAGO,KAAMJ,YAAWlB,EAAMqB,MAA1B,yCAA4E,SAOnGY,OAAA,SAAO9B,GACLA,EAAI+B,QAAQC,eAAe,CAAEC,SAAU,cAGzCR,UAAA,SAAU5B,GACRP,KAAKwC,OAAOjC,EAAMG,QAGpBkC,OAAA,WAAS,IAAAC,EAAA7C,KACP,OACEqB,EAAAP,EAAAQ,cAAA,QAAMC,UAAU,kBACdF,EAAAP,EAAAQ,cAACwB,EAAAhC,EAAD,CAAQa,MA/CG,6BAgDXN,EAAAP,EAAAQ,cAAA,OAAKZ,IAAKV,KAAK+C,QAASxB,UAAU,mCAC/BvB,KAAKK,OAAO2C,IAAI,SAACzC,EAAOyB,GAAR,OACfX,EAAAP,EAAAQ,cAAA,OAAKZ,IAAKH,EAAMG,IAAKuB,IAAG,aAAeD,GACpCa,EAAK1B,SAASZ,OAIrBc,EAAAP,EAAAQ,cAAA,OAAKC,UAAU,+BACbF,EAAAP,EAAAQ,cAAA,UACGtB,KAAKK,OAAO2C,IAAI,SAACzC,EAAOyB,GAAR,OAAca,EAAKd,QAAQxB,EAAOyB,YAvDtCrB,IAAMsC,WA+DhBtD,YAER,IAAMuD,EAAS,+CCzEtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAhB,IAAA,IAAMkB,EAAa,CAAC,UAAW,UAAW,OAAQ,QAAS,MAAO,OAAQ,UAAW,OAAQ,YAAa,UAAW,WAAY,YAEpHD,EAAgB,SAAAF,GAAC,OAAOG,EAAWH,EAAEI,eAApB,IAAsCJ,EAAEK,eACzDpB,EAAc,SAAAe,GAAC,OAAOA,EAAEM,UAAT,IAAsBH,EAAWH,EAAEI,eAAnC,IAAqDJ,EAAEK","file":"component---src-pages-events-jsx-07b5fecd602a4f3eca16.js","sourcesContent":["import { graphql, withPrefix } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { showDayDate } from '../components/utils';\nimport './event.scss';\n\nconst PAGE_TITLE = 'Archives | Figure Figure';\n\nclass EventsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    const data = props.data.allDataJson.edges[0].node;\n    data.events.forEach((event) => {\n      event.date = new Date(event.date);\n      event.ref = React.createRef();\n    });\n    this.events = data.events.sort((a, b) => b.date - a.date);\n    this.currentEvent = this.events.length ? this.events[this.events.length - 1] : undefined;\n  }\n\n  getImage(event) {\n    const img = <img className=\"event-img\" src={withPrefix(event.img)} alt={event.title} />;\n    return event.pdf ? <a href={withPrefix(event.pdf)} target=\"_blank\">{img}</a> : img;\n  }\n\n  getItem(event, i) {\n    return (\n      <li key={`event item ${i}`} onMouseEnter={this.showEvent.bind(this, event)}>\n        <span className=\"event-descr\">\n          <span className=\"event-date\">{showDayDate(event.date)}</span>\n          <span className=\"event-title\">\n            {event.title.toUpperCase()}\n            <br />\n            {event.subtitle}\n            <br />\n            {event.pdf ? <a href={withPrefix(event.pdf)}>— Télécharger le communiqué de presse</a> : ''}\n          </span>\n        </span>\n      </li>\n    );\n  }\n\n  scroll(ref) {\n    ref.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  showEvent(event) {\n    this.scroll(event.ref);\n  }\n\n  render() {\n    return (\n      <main className=\"row no-gutters\">\n        <Helmet title={PAGE_TITLE} />\n        <div ref={this.imgList} className=\"col-md-6 vh-site event-img-grid\">\n          {this.events.map((event, i) => (\n            <div ref={event.ref} key={`event img ${i}`}>\n              {this.getImage(event)}\n            </div>\n          ))}\n        </div>\n        <div className=\"col-md-6 vh-site event-grid\">\n          <ul>\n            {this.events.map((event, i) => this.getItem(event, i))}\n          </ul>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default EventsPage;\n\nexport const pageQuery = graphql`\n  query {\n    allDataJson {\n      edges {\n        node {\n          events {\n            title\n            subtitle\n            date\n            img\n            pdf\n          }\n        }\n      }\n    }\n  }\n`;\n","const monthNames = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\n\nexport const showMonthDate = d => `${monthNames[d.getUTCMonth()]} ${d.getFullYear()}`;\nexport const showDayDate = d => `${d.getDate()} ${monthNames[d.getUTCMonth()]} ${d.getFullYear()}`;\n"],"sourceRoot":""}