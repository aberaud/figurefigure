{"version":3,"sources":["webpack:///./node_modules/svg-baker-runtime/browser-symbol.js","webpack:///./node_modules/svg-sprite-loader/runtime/browser-sprite.build.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/es6.object.define-properties.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["global","factory","__webpack_require__","SpriteSymbol","ref","id","viewBox","content","this","createCommonjsModule","fn","module","exports","prototype","stringify","toString","destroy","this$1","forEach","prop","window","self","deepmerge","isMergeableObject","val","nonNullObject","Object","call","cloneIfNecessary","value","optionsArgument","clone","Array","isArray","defaultArrayMerge","target","source","destination","slice","e","i","indexOf","push","array","options","arrayMerge","keys","key","mergeObject","all","length","Error","reduce","prev","next","namespaces_1","svg","name","uri","xlink","defaultAttrs","wrapInSvgString","attributes","attrs","map","attr","replace","join","objectToAttrsString","SpriteSymbol$$1","BrowserSpriteSymbol","apply","arguments","__proto__","create","constructor","prototypeAccessors","isMounted","get","node","createFromExistingNode","getAttribute","outerHTML","unmount","mount","mountTarget","document","querySelector","render","appendChild","hasImportNode","importNode","doc","DOMParser","parseFromString","documentElement","parse","childNodes","parentNode","removeChild","defineProperties","obj","svg$1","xlink$1","defaultConfig","style","Sprite","config","symbols","add","symbol","existing","find","remove","splice","filter","s","has","stringifiedSymbols","defaultConfig$1","autoConfigure","mountTo","syncUrlsWithBaseTag","listenLocationChangeEvent","locationChangeEvent","locationChangeAngularEmitter","usagesToUpdate","moveGradientsOutsideSymbol","arrayFrom","arrayLike","browser","isChrome","test","navigator","userAgent","isFirefox","isIE","isEdge","evalStylesIEWorkaround","updatedNodes","querySelectorAll","textContent","getUrlWithoutFragment","url","location","href","split","eventName","angular","run","$rootScope","$on","newUrl","oldUrl","data","event","createEvent","initCustomEvent","dispatchEvent","selector","insertBefore","xLinkNS","xLinkAttrName","specialUrlCharsPattern","encoder","match","charCodeAt","toUpperCase","sprite","attList","attSelector","updateUrls","references","startsWith","replaceWith","startsWithEncoded","replaceWithEncoded","nodes","matcher","acc","arrayfied","matched","concat","selectAttributes","localName","RegExp","setAttributeNS","updateReferences","Events","MOUNT","SYMBOL_MOUNT","BrowserSprite","Sprite$$1","cfg","emitter","on","type","handler","off","emit","evt","_emitter","_autoConfigure","baseUrl","getElementsByTagName","handleLocationChange","_handleLocationChange","bind","addEventListener","spriteNode","symbolNode","detail","isNewSymbol","attach","removeEventListener","prepend","mountNode","usages","ready$1","_listener","fns","hack","loaded","doScroll","readyState","shift","setTimeout","loadSprite","getElementById","body","$export","P","fill","S","F","toObject","toAbsoluteIndex","toLength","O","aLen","index","undefined","end","endPos","$find","forced","callbackfn"],"mappings":"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","file":"1-2f60a282abd37c884fa0.js","sourcesContent":["require(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.BrowserSpriteSymbol = factory();\n})(this, function () {\n  'use strict';\n\n  var SpriteSymbol = function SpriteSymbol(ref) {\n    var id = ref.id;\n    var viewBox = ref.viewBox;\n    var content = ref.content;\n    this.id = id;\n    this.viewBox = viewBox;\n    this.content = content;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  SpriteSymbol.prototype.stringify = function stringify() {\n    return this.content;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  SpriteSymbol.prototype.toString = function toString() {\n    return this.stringify();\n  };\n\n  SpriteSymbol.prototype.destroy = function destroy() {\n    var this$1 = this;\n    ['id', 'viewBox', 'content'].forEach(function (prop) {\n      return delete this$1[prop];\n    });\n  };\n  /**\n   * @param {string} content\n   * @return {Element}\n   */\n\n\n  var parse = function parse(content) {\n    var hasImportNode = !!document.importNode;\n    var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n    /**\n     * Fix for browser which are throwing WrongDocumentError\n     * if you insert an element which is not part of the document\n     * @see http://stackoverflow.com/a/7986519/4624403\n     */\n\n    if (hasImportNode) {\n      return document.importNode(doc, true);\n    }\n\n    return doc;\n  };\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var deepmerge = createCommonjsModule(function (module, exports) {\n    (function (root, factory) {\n      if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n      } else {\n        module.exports = factory();\n      }\n    })(commonjsGlobal, function () {\n      function isMergeableObject(val) {\n        var nonNullObject = val && typeof val === 'object';\n        return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';\n      }\n\n      function emptyTarget(val) {\n        return Array.isArray(val) ? [] : {};\n      }\n\n      function cloneIfNecessary(value, optionsArgument) {\n        var clone = optionsArgument && optionsArgument.clone === true;\n        return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;\n      }\n\n      function defaultArrayMerge(target, source, optionsArgument) {\n        var destination = target.slice();\n        source.forEach(function (e, i) {\n          if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n          } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n          } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n          }\n        });\n        return destination;\n      }\n\n      function mergeObject(target, source, optionsArgument) {\n        var destination = {};\n\n        if (isMergeableObject(target)) {\n          Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n          });\n        }\n\n        Object.keys(source).forEach(function (key) {\n          if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n          } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n          }\n        });\n        return destination;\n      }\n\n      function deepmerge(target, source, optionsArgument) {\n        var array = Array.isArray(source);\n        var options = optionsArgument || {\n          arrayMerge: defaultArrayMerge\n        };\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n        if (array) {\n          return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);\n        } else {\n          return mergeObject(target, source, optionsArgument);\n        }\n      }\n\n      deepmerge.all = function deepmergeAll(array, optionsArgument) {\n        if (!Array.isArray(array) || array.length < 2) {\n          throw new Error('first argument should be an array with at least two elements');\n        } // we are sure there are at least 2 values, so it is safe to have no initial value\n\n\n        return array.reduce(function (prev, next) {\n          return deepmerge(prev, next, optionsArgument);\n        });\n      };\n\n      return deepmerge;\n    });\n  });\n  var namespaces_1 = createCommonjsModule(function (module, exports) {\n    var namespaces = {\n      svg: {\n        name: 'xmlns',\n        uri: 'http://www.w3.org/2000/svg'\n      },\n      xlink: {\n        name: 'xmlns:xlink',\n        uri: 'http://www.w3.org/1999/xlink'\n      }\n    };\n    exports[\"default\"] = namespaces;\n    module.exports = exports[\"default\"];\n  });\n  /**\n   * @param {Object} attrs\n   * @return {string}\n   */\n\n  var objectToAttrsString = function objectToAttrsString(attrs) {\n    return Object.keys(attrs).map(function (attr) {\n      var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n      return attr + \"=\\\"\" + value + \"\\\"\";\n    }).join(' ');\n  };\n\n  var svg = namespaces_1.svg;\n  var xlink = namespaces_1.xlink;\n  var defaultAttrs = {};\n  defaultAttrs[svg.name] = svg.uri;\n  defaultAttrs[xlink.name] = xlink.uri;\n  /**\n   * @param {string} [content]\n   * @param {Object} [attributes]\n   * @return {string}\n   */\n\n  var wrapInSvgString = function wrapInSvgString(content, attributes) {\n    if (content === void 0) content = '';\n    var attrs = deepmerge(defaultAttrs, attributes || {});\n    var attrsRendered = objectToAttrsString(attrs);\n    return \"<svg \" + attrsRendered + \">\" + content + \"</svg>\";\n  };\n\n  var BrowserSpriteSymbol = function (SpriteSymbol$$1) {\n    function BrowserSpriteSymbol() {\n      SpriteSymbol$$1.apply(this, arguments);\n    }\n\n    if (SpriteSymbol$$1) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n    BrowserSpriteSymbol.prototype = Object.create(SpriteSymbol$$1 && SpriteSymbol$$1.prototype);\n    BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n    var prototypeAccessors = {\n      isMounted: {}\n    };\n\n    prototypeAccessors.isMounted.get = function () {\n      return !!this.node;\n    };\n    /**\n     * @param {Element} node\n     * @return {BrowserSpriteSymbol}\n     */\n\n\n    BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode(node) {\n      return new BrowserSpriteSymbol({\n        id: node.getAttribute('id'),\n        viewBox: node.getAttribute('viewBox'),\n        content: node.outerHTML\n      });\n    };\n\n    BrowserSpriteSymbol.prototype.destroy = function destroy() {\n      if (this.isMounted) {\n        this.unmount();\n      }\n\n      SpriteSymbol$$1.prototype.destroy.call(this);\n    };\n    /**\n     * @param {Element|string} target\n     * @return {Element}\n     */\n\n\n    BrowserSpriteSymbol.prototype.mount = function mount(target) {\n      if (this.isMounted) {\n        return this.node;\n      }\n\n      var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n      var node = this.render();\n      this.node = node;\n      mountTarget.appendChild(node);\n      return node;\n    };\n    /**\n     * @return {Element}\n     */\n\n\n    BrowserSpriteSymbol.prototype.render = function render() {\n      var content = this.stringify();\n      return parse(wrapInSvgString(content)).childNodes[0];\n    };\n\n    BrowserSpriteSymbol.prototype.unmount = function unmount() {\n      this.node.parentNode.removeChild(this.node);\n    };\n\n    Object.defineProperties(BrowserSpriteSymbol.prototype, prototypeAccessors);\n    return BrowserSpriteSymbol;\n  }(SpriteSymbol);\n\n  return BrowserSpriteSymbol;\n});","require(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.BrowserSprite = factory();\n})(this, function () {\n  'use strict';\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var deepmerge = createCommonjsModule(function (module, exports) {\n    (function (root, factory) {\n      if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n      } else {\n        module.exports = factory();\n      }\n    })(commonjsGlobal, function () {\n      function isMergeableObject(val) {\n        var nonNullObject = val && typeof val === 'object';\n        return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';\n      }\n\n      function emptyTarget(val) {\n        return Array.isArray(val) ? [] : {};\n      }\n\n      function cloneIfNecessary(value, optionsArgument) {\n        var clone = optionsArgument && optionsArgument.clone === true;\n        return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;\n      }\n\n      function defaultArrayMerge(target, source, optionsArgument) {\n        var destination = target.slice();\n        source.forEach(function (e, i) {\n          if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n          } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n          } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n          }\n        });\n        return destination;\n      }\n\n      function mergeObject(target, source, optionsArgument) {\n        var destination = {};\n\n        if (isMergeableObject(target)) {\n          Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n          });\n        }\n\n        Object.keys(source).forEach(function (key) {\n          if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n          } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n          }\n        });\n        return destination;\n      }\n\n      function deepmerge(target, source, optionsArgument) {\n        var array = Array.isArray(source);\n        var options = optionsArgument || {\n          arrayMerge: defaultArrayMerge\n        };\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n        if (array) {\n          return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);\n        } else {\n          return mergeObject(target, source, optionsArgument);\n        }\n      }\n\n      deepmerge.all = function deepmergeAll(array, optionsArgument) {\n        if (!Array.isArray(array) || array.length < 2) {\n          throw new Error('first argument should be an array with at least two elements');\n        } // we are sure there are at least 2 values, so it is safe to have no initial value\n\n\n        return array.reduce(function (prev, next) {\n          return deepmerge(prev, next, optionsArgument);\n        });\n      };\n\n      return deepmerge;\n    });\n  }); //      \n  // An event handler can take an optional event argument\n  // and should not return a value\n  // An array of all currently registered event handlers for a type\n  // A map of event types and their corresponding event handlers.\n\n  /** Mitt: Tiny (~200b) functional event emitter / pubsub.\n   *  @name mitt\n   *  @returns {Mitt}\n   */\n\n  function mitt(all) {\n    all = all || Object.create(null);\n    return {\n      /**\n       * Register an event handler for the given type.\n       *\n       * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n       * @param  {Function} handler Function to call in response to given event\n       * @memberOf mitt\n       */\n      on: function on(type, handler) {\n        (all[type] || (all[type] = [])).push(handler);\n      },\n\n      /**\n       * Remove an event handler for the given type.\n       *\n       * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n       * @param  {Function} handler Handler function to remove\n       * @memberOf mitt\n       */\n      off: function off(type, handler) {\n        if (all[type]) {\n          all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n        }\n      },\n\n      /**\n       * Invoke all handlers for the given type.\n       * If present, `\"*\"` handlers are invoked after type-matched handlers.\n       *\n       * @param {String} type  The event type to invoke\n       * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n       * @memberof mitt\n       */\n      emit: function emit(type, evt) {\n        (all[type] || []).map(function (handler) {\n          handler(evt);\n        });\n        (all['*'] || []).map(function (handler) {\n          handler(type, evt);\n        });\n      }\n    };\n  }\n\n  var namespaces_1 = createCommonjsModule(function (module, exports) {\n    var namespaces = {\n      svg: {\n        name: 'xmlns',\n        uri: 'http://www.w3.org/2000/svg'\n      },\n      xlink: {\n        name: 'xmlns:xlink',\n        uri: 'http://www.w3.org/1999/xlink'\n      }\n    };\n    exports[\"default\"] = namespaces;\n    module.exports = exports[\"default\"];\n  });\n  /**\n   * @param {Object} attrs\n   * @return {string}\n   */\n\n  var objectToAttrsString = function objectToAttrsString(attrs) {\n    return Object.keys(attrs).map(function (attr) {\n      var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n      return attr + \"=\\\"\" + value + \"\\\"\";\n    }).join(' ');\n  };\n\n  var svg = namespaces_1.svg;\n  var xlink = namespaces_1.xlink;\n  var defaultAttrs = {};\n  defaultAttrs[svg.name] = svg.uri;\n  defaultAttrs[xlink.name] = xlink.uri;\n  /**\n   * @param {string} [content]\n   * @param {Object} [attributes]\n   * @return {string}\n   */\n\n  var wrapInSvgString = function wrapInSvgString(content, attributes) {\n    if (content === void 0) content = '';\n    var attrs = deepmerge(defaultAttrs, attributes || {});\n    var attrsRendered = objectToAttrsString(attrs);\n    return \"<svg \" + attrsRendered + \">\" + content + \"</svg>\";\n  };\n\n  var svg$1 = namespaces_1.svg;\n  var xlink$1 = namespaces_1.xlink;\n  var defaultConfig = {\n    attrs: (obj = {\n      style: ['position: absolute', 'width: 0', 'height: 0'].join('; ')\n    }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj)\n  };\n  var obj;\n\n  var Sprite = function Sprite(config) {\n    this.config = deepmerge(defaultConfig, config || {});\n    this.symbols = [];\n  };\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * @param {SpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n\n\n  Sprite.prototype.add = function add(symbol) {\n    var ref = this;\n    var symbols = ref.symbols;\n    var existing = this.find(symbol.id);\n\n    if (existing) {\n      symbols[symbols.indexOf(existing)] = symbol;\n      return false;\n    }\n\n    symbols.push(symbol);\n    return true;\n  };\n  /**\n   * Remove symbol & destroy it\n   * @param {string} id\n   * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n   */\n\n\n  Sprite.prototype.remove = function remove(id) {\n    var ref = this;\n    var symbols = ref.symbols;\n    var symbol = this.find(id);\n\n    if (symbol) {\n      symbols.splice(symbols.indexOf(symbol), 1);\n      symbol.destroy();\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @param {string} id\n   * @return {SpriteSymbol|null}\n   */\n\n\n  Sprite.prototype.find = function find(id) {\n    return this.symbols.filter(function (s) {\n      return s.id === id;\n    })[0] || null;\n  };\n  /**\n   * @param {string} id\n   * @return {boolean}\n   */\n\n\n  Sprite.prototype.has = function has(id) {\n    return this.find(id) !== null;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  Sprite.prototype.stringify = function stringify() {\n    var ref = this.config;\n    var attrs = ref.attrs;\n    var stringifiedSymbols = this.symbols.map(function (s) {\n      return s.stringify();\n    }).join('');\n    return wrapInSvgString(stringifiedSymbols, attrs);\n  };\n  /**\n   * @return {string}\n   */\n\n\n  Sprite.prototype.toString = function toString() {\n    return this.stringify();\n  };\n\n  Sprite.prototype.destroy = function destroy() {\n    this.symbols.forEach(function (s) {\n      return s.destroy();\n    });\n  };\n\n  var SpriteSymbol = function SpriteSymbol(ref) {\n    var id = ref.id;\n    var viewBox = ref.viewBox;\n    var content = ref.content;\n    this.id = id;\n    this.viewBox = viewBox;\n    this.content = content;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  SpriteSymbol.prototype.stringify = function stringify() {\n    return this.content;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  SpriteSymbol.prototype.toString = function toString() {\n    return this.stringify();\n  };\n\n  SpriteSymbol.prototype.destroy = function destroy() {\n    var this$1 = this;\n    ['id', 'viewBox', 'content'].forEach(function (prop) {\n      return delete this$1[prop];\n    });\n  };\n  /**\n   * @param {string} content\n   * @return {Element}\n   */\n\n\n  var parse = function parse(content) {\n    var hasImportNode = !!document.importNode;\n    var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n    /**\n     * Fix for browser which are throwing WrongDocumentError\n     * if you insert an element which is not part of the document\n     * @see http://stackoverflow.com/a/7986519/4624403\n     */\n\n    if (hasImportNode) {\n      return document.importNode(doc, true);\n    }\n\n    return doc;\n  };\n\n  var BrowserSpriteSymbol = function (SpriteSymbol$$1) {\n    function BrowserSpriteSymbol() {\n      SpriteSymbol$$1.apply(this, arguments);\n    }\n\n    if (SpriteSymbol$$1) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n    BrowserSpriteSymbol.prototype = Object.create(SpriteSymbol$$1 && SpriteSymbol$$1.prototype);\n    BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n    var prototypeAccessors = {\n      isMounted: {}\n    };\n\n    prototypeAccessors.isMounted.get = function () {\n      return !!this.node;\n    };\n    /**\n     * @param {Element} node\n     * @return {BrowserSpriteSymbol}\n     */\n\n\n    BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode(node) {\n      return new BrowserSpriteSymbol({\n        id: node.getAttribute('id'),\n        viewBox: node.getAttribute('viewBox'),\n        content: node.outerHTML\n      });\n    };\n\n    BrowserSpriteSymbol.prototype.destroy = function destroy() {\n      if (this.isMounted) {\n        this.unmount();\n      }\n\n      SpriteSymbol$$1.prototype.destroy.call(this);\n    };\n    /**\n     * @param {Element|string} target\n     * @return {Element}\n     */\n\n\n    BrowserSpriteSymbol.prototype.mount = function mount(target) {\n      if (this.isMounted) {\n        return this.node;\n      }\n\n      var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n      var node = this.render();\n      this.node = node;\n      mountTarget.appendChild(node);\n      return node;\n    };\n    /**\n     * @return {Element}\n     */\n\n\n    BrowserSpriteSymbol.prototype.render = function render() {\n      var content = this.stringify();\n      return parse(wrapInSvgString(content)).childNodes[0];\n    };\n\n    BrowserSpriteSymbol.prototype.unmount = function unmount() {\n      this.node.parentNode.removeChild(this.node);\n    };\n\n    Object.defineProperties(BrowserSpriteSymbol.prototype, prototypeAccessors);\n    return BrowserSpriteSymbol;\n  }(SpriteSymbol);\n\n  var defaultConfig$1 = {\n    /**\n     * Should following options be automatically configured:\n     * - `syncUrlsWithBaseTag`\n     * - `locationChangeAngularEmitter`\n     * - `moveGradientsOutsideSymbol`\n     * @type {boolean}\n     */\n    autoConfigure: true,\n\n    /**\n     * Default mounting selector\n     * @type {string}\n     */\n    mountTo: 'body',\n\n    /**\n     * Fix disappearing SVG elements when <base href> exists.\n     * Executes when sprite mounted.\n     * @see http://stackoverflow.com/a/18265336/796152\n     * @see https://github.com/everdimension/angular-svg-base-fix\n     * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n     * @type {boolean}\n     */\n    syncUrlsWithBaseTag: false,\n\n    /**\n     * Should sprite listen custom location change event\n     * @type {boolean}\n     */\n    listenLocationChangeEvent: true,\n\n    /**\n     * Custom window event name which should be emitted to update sprite urls\n     * @type {string}\n     */\n    locationChangeEvent: 'locationChange',\n\n    /**\n     * Emit location change event in Angular automatically\n     * @type {boolean}\n     */\n    locationChangeAngularEmitter: false,\n\n    /**\n     * Selector to find symbols usages when updating sprite urls\n     * @type {string}\n     */\n    usagesToUpdate: 'use[*|href]',\n\n    /**\n     * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n     * Executes when sprite is rendered, but not mounted.\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n     * @type {boolean}\n     */\n    moveGradientsOutsideSymbol: false\n  };\n  /**\n   * @param {*} arrayLike\n   * @return {Array}\n   */\n\n  var arrayFrom = function arrayFrom(arrayLike) {\n    return Array.prototype.slice.call(arrayLike, 0);\n  };\n\n  var browser = {\n    isChrome: function isChrome() {\n      return /chrome/i.test(navigator.userAgent);\n    },\n    isFirefox: function isFirefox() {\n      return /firefox/i.test(navigator.userAgent);\n    },\n    // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n    isIE: function isIE() {\n      return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);\n    },\n    isEdge: function isEdge() {\n      return /edge/i.test(navigator.userAgent);\n    }\n  };\n  /**\n   * @param {string} name\n   * @param {*} data\n   */\n\n  var dispatchEvent = function dispatchEvent(name, data) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent(name, false, false, data);\n    window.dispatchEvent(event);\n  };\n  /**\n   * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n   * This trick will trigger IE to read and use any existing SVG <style> tags.\n   * @see https://github.com/iconic/SVGInjector/issues/23\n   * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n   *\n   * @param {Element} node DOM Element to search <style> tags in\n   * @return {Array<HTMLStyleElement>}\n   */\n\n\n  var evalStylesIEWorkaround = function evalStylesIEWorkaround(node) {\n    var updatedNodes = [];\n    arrayFrom(node.querySelectorAll('style')).forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n    return updatedNodes;\n  };\n  /**\n   * @param {string} [url] If not provided - current URL will be used\n   * @return {string}\n   */\n\n\n  var getUrlWithoutFragment = function getUrlWithoutFragment(url) {\n    return (url || window.location.href).split('#')[0];\n  };\n  /* global angular */\n\n  /**\n   * @param {string} eventName\n   */\n\n\n  var locationChangeAngularEmitter = function locationChangeAngularEmitter(eventName) {\n    angular.module('ng').run(['$rootScope', function ($rootScope) {\n      $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n        dispatchEvent(eventName, {\n          oldUrl: oldUrl,\n          newUrl: newUrl\n        });\n      });\n    }]);\n  };\n\n  var defaultSelector = 'linearGradient, radialGradient, pattern';\n  /**\n   * @param {Element} svg\n   * @param {string} [selector]\n   * @return {Element}\n   */\n\n  var moveGradientsOutsideSymbol = function moveGradientsOutsideSymbol(svg, selector) {\n    if (selector === void 0) selector = defaultSelector;\n    arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n      arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n        symbol.parentNode.insertBefore(node, symbol);\n      });\n    });\n    return svg;\n  };\n  /**\n   * @param {NodeList} nodes\n   * @param {Function} [matcher]\n   * @return {Attr[]}\n   */\n\n\n  function selectAttributes(nodes, matcher) {\n    var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n      if (!node.attributes) {\n        return acc;\n      }\n\n      var arrayfied = arrayFrom(node.attributes);\n      var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n      return acc.concat(matched);\n    }, []);\n    return attrs;\n  }\n  /**\n   * @param {NodeList|Node} nodes\n   * @param {boolean} [clone=true]\n   * @return {string}\n   */\n\n\n  var xLinkNS = namespaces_1.xlink.uri;\n  var xLinkAttrName = 'xlink:href'; // eslint-disable-next-line no-useless-escape\n\n  var specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\n  function encoder(url) {\n    return url.replace(specialUrlCharsPattern, function (match) {\n      return \"%\" + match[0].charCodeAt(0).toString(16).toUpperCase();\n    });\n  }\n\n  function escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n  }\n  /**\n   * @param {NodeList} nodes\n   * @param {string} startsWith\n   * @param {string} replaceWith\n   * @return {NodeList}\n   */\n\n\n  function updateReferences(nodes, startsWith, replaceWith) {\n    arrayFrom(nodes).forEach(function (node) {\n      var href = node.getAttribute(xLinkAttrName);\n\n      if (href && href.indexOf(startsWith) === 0) {\n        var newUrl = href.replace(startsWith, replaceWith);\n        node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n      }\n    });\n    return nodes;\n  }\n  /**\n   * List of SVG attributes to update url() target in them\n   */\n\n\n  var attList = ['clipPath', 'colorProfile', 'src', 'cursor', 'fill', 'filter', 'marker', 'markerStart', 'markerMid', 'markerEnd', 'mask', 'stroke', 'style'];\n  var attSelector = attList.map(function (attr) {\n    return \"[\" + attr + \"]\";\n  }).join(',');\n  /**\n   * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n   * @param {Element} svg\n   * @param {NodeList} references\n   * @param {string|RegExp} startsWith\n   * @param {string} replaceWith\n   * @return {void}\n   *\n   * @example\n   * const sprite = document.querySelector('svg.sprite');\n   * const usages = document.querySelectorAll('use');\n   * updateUrls(sprite, usages, '#', 'prefix#');\n   */\n\n  var updateUrls = function updateUrls(svg, references, startsWith, replaceWith) {\n    var startsWithEncoded = encoder(startsWith);\n    var replaceWithEncoded = encoder(replaceWith);\n    var nodes = svg.querySelectorAll(attSelector);\n    var attrs = selectAttributes(nodes, function (ref) {\n      var localName = ref.localName;\n      var value = ref.value;\n      return attList.indexOf(localName) !== -1 && value.indexOf(\"url(\" + startsWithEncoded) !== -1;\n    });\n    attrs.forEach(function (attr) {\n      return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded);\n    });\n    updateReferences(references, startsWithEncoded, replaceWithEncoded);\n  };\n  /**\n   * Internal emitter events\n   * @enum\n   * @private\n   */\n\n\n  var Events = {\n    MOUNT: 'mount',\n    SYMBOL_MOUNT: 'symbol_mount'\n  };\n\n  var BrowserSprite = function (Sprite$$1) {\n    function BrowserSprite(cfg) {\n      var this$1 = this;\n      if (cfg === void 0) cfg = {};\n      Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n      var emitter = mitt();\n      this._emitter = emitter;\n      this.node = null;\n      var ref = this;\n      var config = ref.config;\n\n      if (config.autoConfigure) {\n        this._autoConfigure(cfg);\n      }\n\n      if (config.syncUrlsWithBaseTag) {\n        var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n        emitter.on(Events.MOUNT, function () {\n          return this$1.updateUrls('#', baseUrl);\n        });\n      }\n\n      var handleLocationChange = this._handleLocationChange.bind(this);\n\n      this._handleLocationChange = handleLocationChange; // Provide way to update sprite urls externally via dispatching custom window event\n\n      if (config.listenLocationChangeEvent) {\n        window.addEventListener(config.locationChangeEvent, handleLocationChange);\n      } // Emit location change event in Angular automatically\n\n\n      if (config.locationChangeAngularEmitter) {\n        locationChangeAngularEmitter(config.locationChangeEvent);\n      } // After sprite mounted\n\n\n      emitter.on(Events.MOUNT, function (spriteNode) {\n        if (config.moveGradientsOutsideSymbol) {\n          moveGradientsOutsideSymbol(spriteNode);\n        }\n      }); // After symbol mounted into sprite\n\n      emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n        if (config.moveGradientsOutsideSymbol) {\n          moveGradientsOutsideSymbol(symbolNode.parentNode);\n        }\n\n        if (browser.isIE() || browser.isEdge()) {\n          evalStylesIEWorkaround(symbolNode);\n        }\n      });\n    }\n\n    if (Sprite$$1) BrowserSprite.__proto__ = Sprite$$1;\n    BrowserSprite.prototype = Object.create(Sprite$$1 && Sprite$$1.prototype);\n    BrowserSprite.prototype.constructor = BrowserSprite;\n    var prototypeAccessors = {\n      isMounted: {}\n    };\n    /**\n     * @return {boolean}\n     */\n\n    prototypeAccessors.isMounted.get = function () {\n      return !!this.node;\n    };\n    /**\n     * Automatically configure following options\n     * - `syncUrlsWithBaseTag`\n     * - `locationChangeAngularEmitter`\n     * - `moveGradientsOutsideSymbol`\n     * @param {Object} cfg\n     * @private\n     */\n\n\n    BrowserSprite.prototype._autoConfigure = function _autoConfigure(cfg) {\n      var ref = this;\n      var config = ref.config;\n\n      if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n        config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n      }\n\n      if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n        config.locationChangeAngularEmitter = 'angular' in window;\n      }\n\n      if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n        config.moveGradientsOutsideSymbol = browser.isFirefox();\n      }\n    };\n    /**\n     * @param {Event} event\n     * @param {Object} event.detail\n     * @param {string} event.detail.oldUrl\n     * @param {string} event.detail.newUrl\n     * @private\n     */\n\n\n    BrowserSprite.prototype._handleLocationChange = function _handleLocationChange(event) {\n      var ref = event.detail;\n      var oldUrl = ref.oldUrl;\n      var newUrl = ref.newUrl;\n      this.updateUrls(oldUrl, newUrl);\n    };\n    /**\n     * Add new symbol. If symbol with the same id exists it will be replaced.\n     * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n     * @fires Events#SYMBOL_MOUNT\n     * @param {BrowserSpriteSymbol} symbol\n     * @return {boolean} `true` - symbol was added, `false` - replaced\n     */\n\n\n    BrowserSprite.prototype.add = function add(symbol) {\n      var sprite = this;\n      var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n      if (this.isMounted && isNewSymbol) {\n        symbol.mount(sprite.node);\n\n        this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n      }\n\n      return isNewSymbol;\n    };\n    /**\n     * Attach to existing DOM node\n     * @param {string|Element} target\n     * @return {Element|null} attached DOM Element. null if node to attach not found.\n     */\n\n\n    BrowserSprite.prototype.attach = function attach(target) {\n      var this$1 = this;\n      var sprite = this;\n\n      if (sprite.isMounted) {\n        return sprite.node;\n      }\n      /** @type Element */\n\n\n      var node = typeof target === 'string' ? document.querySelector(target) : target;\n      sprite.node = node; // Already added symbols needs to be mounted\n\n      this.symbols.forEach(function (symbol) {\n        symbol.mount(sprite.node);\n\n        this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n      }); // Create symbols from existing DOM nodes, add and mount them\n\n      arrayFrom(node.querySelectorAll('symbol')).forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n\n        sprite.add(symbol);\n      });\n\n      this._emitter.emit(Events.MOUNT, node);\n\n      return node;\n    };\n\n    BrowserSprite.prototype.destroy = function destroy() {\n      var ref = this;\n      var config = ref.config;\n      var symbols = ref.symbols;\n      var _emitter = ref._emitter;\n      symbols.forEach(function (s) {\n        return s.destroy();\n      });\n\n      _emitter.off('*');\n\n      window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n      if (this.isMounted) {\n        this.unmount();\n      }\n    };\n    /**\n     * @fires Events#MOUNT\n     * @param {string|Element} [target]\n     * @param {boolean} [prepend=false]\n     * @return {Element|null} rendered sprite node. null if mount node not found.\n     */\n\n\n    BrowserSprite.prototype.mount = function mount(target, prepend) {\n      if (target === void 0) target = this.config.mountTo;\n      if (prepend === void 0) prepend = false;\n      var sprite = this;\n\n      if (sprite.isMounted) {\n        return sprite.node;\n      }\n\n      var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n      var node = sprite.render();\n      this.node = node;\n\n      if (prepend && mountNode.childNodes[0]) {\n        mountNode.insertBefore(node, mountNode.childNodes[0]);\n      } else {\n        mountNode.appendChild(node);\n      }\n\n      this._emitter.emit(Events.MOUNT, node);\n\n      return node;\n    };\n    /**\n     * @return {Element}\n     */\n\n\n    BrowserSprite.prototype.render = function render() {\n      return parse(this.stringify());\n    };\n    /**\n     * Detach sprite from the DOM\n     */\n\n\n    BrowserSprite.prototype.unmount = function unmount() {\n      this.node.parentNode.removeChild(this.node);\n    };\n    /**\n     * Update URLs in sprite and usage elements\n     * @param {string} oldUrl\n     * @param {string} newUrl\n     * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n     */\n\n\n    BrowserSprite.prototype.updateUrls = function updateUrls$1(oldUrl, newUrl) {\n      if (!this.isMounted) {\n        return false;\n      }\n\n      var usages = document.querySelectorAll(this.config.usagesToUpdate);\n      updateUrls(this.node, usages, getUrlWithoutFragment(oldUrl) + \"#\", getUrlWithoutFragment(newUrl) + \"#\");\n      return true;\n    };\n\n    Object.defineProperties(BrowserSprite.prototype, prototypeAccessors);\n    return BrowserSprite;\n  }(Sprite);\n\n  var ready$1 = createCommonjsModule(function (module) {\n    /*!\n      * domready (c) Dustin Diaz 2014 - License MIT\n      */\n    !function (name, definition) {\n      {\n        module.exports = definition();\n      }\n    }('domready', function () {\n      var fns = [],\n          _listener,\n          doc = document,\n          hack = doc.documentElement.doScroll,\n          domContentLoaded = 'DOMContentLoaded',\n          loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n      if (!loaded) {\n        doc.addEventListener(domContentLoaded, _listener = function listener() {\n          doc.removeEventListener(domContentLoaded, _listener);\n          loaded = 1;\n\n          while (_listener = fns.shift()) {\n            _listener();\n          }\n        });\n      }\n\n      return function (fn) {\n        loaded ? setTimeout(fn, 0) : fns.push(fn);\n      };\n    });\n  });\n  var spriteNodeId = '__SVG_SPRITE_NODE__';\n  var spriteGlobalVarName = '__SVG_SPRITE__';\n  var isSpriteExists = !!window[spriteGlobalVarName]; // eslint-disable-next-line import/no-mutable-exports\n\n  var sprite;\n\n  if (isSpriteExists) {\n    sprite = window[spriteGlobalVarName];\n  } else {\n    sprite = new BrowserSprite({\n      attrs: {\n        id: spriteNodeId\n      }\n    });\n    window[spriteGlobalVarName] = sprite;\n  }\n\n  var loadSprite = function loadSprite() {\n    /**\n     * Check for page already contains sprite node\n     * If found - attach to and reuse it's content\n     * If not - render and mount the new sprite\n     */\n    var existing = document.getElementById(spriteNodeId);\n\n    if (existing) {\n      sprite.attach(existing);\n    } else {\n      sprite.mount(document.body, true);\n    }\n  };\n\n  if (document.body) {\n    loadSprite();\n  } else {\n    ready$1(loadSprite);\n  }\n\n  var sprite$1 = sprite;\n  return sprite$1;\n});","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}